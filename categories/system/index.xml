<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>System on Jeremy Mathevet</title>
    <link>https://blog.mathevet.xyz/categories/system/</link>
    <description>Recent content in System on Jeremy Mathevet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 26 May 2015 19:49:58 +0000</lastBuildDate>
    
	<atom:link href="https://blog.mathevet.xyz/categories/system/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SOCKS proxy via an SSH tunnel</title>
      <link>https://blog.mathevet.xyz/socks-proxy-via-an-ssh-tunnel/</link>
      <pubDate>Tue, 26 May 2015 19:49:58 +0000</pubDate>
      
      <guid>https://blog.mathevet.xyz/socks-proxy-via-an-ssh-tunnel/</guid>
      <description>You are behind a restrictive firewall and you aspire to more freedom? You need to access an Intranet website located in a different environment than yours? You are far from your home country, and can&amp;rsquo;t live one minute more without your favourite TV shows, that you can&amp;rsquo;t watch because of the localisation restrictions?
You can communicate via port 22? Do you have an SSH server that could access the content you want?</description>
    </item>
    
    <item>
      <title>SSH: RSA/DSA authentication</title>
      <link>https://blog.mathevet.xyz/ssh-rsadsa-authentication/</link>
      <pubDate>Fri, 07 Feb 2014 12:53:24 +0000</pubDate>
      
      <guid>https://blog.mathevet.xyz/ssh-rsadsa-authentication/</guid>
      <description>Password authentication is good but can be dangerous, because it is weak against brute force attacks. There are some mechanisms which allow to mitigate this treat. There are also safer authentication mechanisms for SSH, like public key auhtentication.
We&amp;rsquo;re going to create a key pair from our client, a public and a private. We send the public key to the server. Thus, when the client tries to connect, the server communicates by encrypting communications with the public key.</description>
    </item>
    
    <item>
      <title>Manage your iptables rules. Properly.</title>
      <link>https://blog.mathevet.xyz/manage-your-iptables-rules-properly/</link>
      <pubDate>Mon, 25 Nov 2013 15:53:55 +0000</pubDate>
      
      <guid>https://blog.mathevet.xyz/manage-your-iptables-rules-properly/</guid>
      <description>Debian based I regularly see sysadmins saving their iptables rules in an init script. It works, but it&amp;rsquo;s not the most elegant way to do it. I prefer personally to save the existing rules with the iptables-save command. This command sends the result on the standard output, so let&amp;rsquo;s redirect it to a file.
# iptables-save &amp;gt; /etc/iptables  Interesting option: -c displays how many times the rule has been applied (on bytes and on packets).</description>
    </item>
    
  </channel>
</rss>